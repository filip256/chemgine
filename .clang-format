# General
BasedOnStyle: LLVM
Language: Cpp
Standard: c++20

# Alignment
AlignArrayOfStructures: Right
AlignAfterOpenBracket: AlwaysBreak
AlignConsecutiveAssignments:
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: false
  AlignCompound: true
  PadOperators: true
AlignConsecutiveDeclarations:
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: false
  AlignFunctionDeclarations: true
  AlignFunctionPointers: true
AlignConsecutiveMacros:
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: false
AlignEscapedNewlines: LeftWithLastLine
AlignOperands: Align
AlignTrailingComments:
  Kind: Always
  OverEmptyLines: 0
QualifierAlignment: Custom
QualifierOrder: [friend, static, inline, constexpr, const, volatile, type, restrict]

# Short
AllowShortBlocksOnASingleLine: Empty
AllowShortCaseExpressionOnASingleLine: true
AllowShortCaseLabelsOnASingleLine: false
AllowShortCompoundRequirementOnASingleLine: true
AllowShortEnumsOnASingleLine: false
AllowShortFunctionsOnASingleLine: All
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: false
AllowShortNamespacesOnASingleLine: false
DerivePointerAlignment: false

# Breaks
AllowBreakBeforeNoexceptSpecifier: Never
AlwaysBreakBeforeMultilineStrings: true
BinPackArguments: false
BinPackParameters: OnePerLine
BreakAdjacentStringLiterals: true
BreakAfterAttributes: Never
BreakAfterReturnType: Automatic
PenaltyReturnTypeOnItsOwnLine: 100
PenaltyBreakOpenParenthesis: 0
BreakBeforeBinaryOperators: None
BreakBeforeBraces: Custom
BreakBeforeConceptDeclarations: Allowed
BreakBeforeInlineASMColon: OnlyMultiline
BreakBeforeTernaryOperators: true
BreakBinaryOperations: RespectPrecedence
BreakConstructorInitializers: AfterColon
BreakFunctionDefinitionParameters: false
BreakInheritanceList: AfterComma
BreakStringLiterals: true
BreakTemplateDeclarations: Yes
ColumnLimit: 120
CompactNamespaces: false
EmptyLineAfterAccessModifier: Never
EmptyLineBeforeAccessModifier: LogicalBlock
PackConstructorInitializers: Never
RequiresClausePosition: OwnLine
WrapNamespaceBodyWithEmptyLines: Always

# Bracing:
BraceWrapping:
  AfterCaseLabel: true
  AfterClass: true
  AfterEnum: true
  AfterControlStatement: Never
  AfterFunction: true
  AfterNamespace: true
  AfterStruct: true
  AfterUnion: true
  AfterExternBlock: true
  BeforeCatch: false
  BeforeElse: true
  BeforeLambdaBody: false
  BeforeWhile: false
  IndentBraces: false
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: true
InsertBraces: false

# Spacing
AccessModifierOffset: -4
BitFieldColonSpacing: Both
BracedInitializerIndentWidth: 4
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4
Cpp11BracedListStyle: true
IndentAccessModifiers: false
IndentCaseBlocks: true
IndentCaseLabels: false
IndentExportBlock: false
IndentExternBlock: NoIndent
IndentGotoLabels: false
IndentPPDirectives: BeforeHash
IndentRequiresClause: false
IndentWidth: 4
IndentWrappedFunctionNames: false
KeepEmptyLines:
  AtEndOfFile: true
  AtStartOfBlock: false
  AtStartOfFile: false
LambdaBodyIndentation: OuterScope
MaxEmptyLinesToKeep: 1
NamespaceIndentation: None
PPIndentWidth: 4
PointerAlignment: Left
ReferenceAlignment: Left
RemoveEmptyLinesInUnwrappedLines: true
RequiresExpressionIndentation: OuterScope
SeparateDefinitionBlocks: Always
SpaceAfterCStyleCast: true
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: true
SpaceAroundPointerQualifiers: Default
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: Custom
SpaceBeforeParensOptions:
  AfterControlStatements: true
  AfterForeachMacros: true
  AfterFunctionDeclarationName: false
  AfterFunctionDefinitionName: false
  AfterIfMacros: true
  AfterOverloadedOperator: false
  AfterPlacementOperator: true
  AfterRequiresInClause: true
  AfterRequiresInExpression: true
  BeforeNonEmptyParentheses: false
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpacesBeforeTrailingComments: 2
SpacesInAngles: Never
SpacesInLineCommentPrefix:
  Minimum: 1
  Maximum: 1
SpacesInParens: Custom
SpacesInParensOptions:
  ExceptDoubleParentheses: false
  InConditionalStatements: false
  InCStyleCasts: false
  InEmptyParentheses: false
  Other: false
SpacesInSquareBrackets: false
TabWidth: 4
UseTab: Never

# Includes
IncludeIsMainRegex: "$"
MainIncludeChar: Quote
IncludeBlocks: Regroup
IncludeCategories:
  - Regex: '^".*"'
    Priority: 2
  - Regex: '^<.*\.h>'
    Priority: 3
  - Regex: '^<.*>'
    Priority: 4
  - Regex: '.*'
    Priority: 1
SortIncludes: CaseSensitive
SortUsingDeclarations: LexicographicNumeric

# Macros
# AttributeMacros: []
# ForEachMacros: []
# IfMacros: []
# MacroBlockBegin: []
# MacroBlockEnd: []
# Macros: []
# MacrosSkippedByRemoveParentheses: []
# NamespaceMacros: []
# StatementAttributeLikeMacros: []
# StatementMacros: []
# TypenameMacros: []
# WhitespaceSensitiveMacros: []
SkipMacroDefinitionBody: false

# ?
AllowAllArgumentsOnNextLine: true
AllowAllParametersOfDeclarationOnNextLine: true
FixNamespaceComments: true
InsertNewlineAtEOF: true
IntegerLiteralSeparator:
  Binary: -1
  Decimal: 3
  Hex: -1
KeepFormFeed: true
LineEnding: CRLF
ReflowComments: Always
ShortNamespaceLines: 0

# Cool but dangerous
# RemoveBracesLLVM: true
# RemoveParentheses: true
